#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../debug.h
iostream
-

../include/irtree/blocks/Block.hpp
irtree/elements.hpp
../include/irtree/blocks/irtree/elements.hpp

../include/irtree/blocks/BlockTree.hpp
functional
-
irtree/blocks/NodeAdapter.hpp
../include/irtree/blocks/irtree/blocks/NodeAdapter.hpp
irtree/blocks/Block.hpp
../include/irtree/blocks/irtree/blocks/Block.hpp
irtree/blocks/Trace.hpp
../include/irtree/blocks/irtree/blocks/Trace.hpp
irtree/visitors/IdentVisitor.hpp
../include/irtree/blocks/irtree/visitors/IdentVisitor.hpp

../include/irtree/blocks/NodeAdapter.hpp
irtree/elements.hpp
../include/irtree/blocks/irtree/elements.hpp

../include/irtree/blocks/Trace.hpp
irtree/blocks/Block.hpp
../include/irtree/blocks/irtree/blocks/Block.hpp

../include/irtree/elements.hpp
irtree/tree_wrappers/SubtreeWrapper.hpp
../include/irtree/irtree/tree_wrappers/SubtreeWrapper.hpp
irtree/tree_wrappers/ExpressionWrapper.hpp
../include/irtree/irtree/tree_wrappers/ExpressionWrapper.hpp
irtree/tree_wrappers/StatementWrapper.hpp
../include/irtree/irtree/tree_wrappers/StatementWrapper.hpp
irtree/tree_wrappers/conditional_wrappers/ConditionalWrapper.hpp
../include/irtree/irtree/tree_wrappers/conditional_wrappers/ConditionalWrapper.hpp
irtree/tree_wrappers/conditional_wrappers/NegateConditionalWrapper.hpp
../include/irtree/irtree/tree_wrappers/conditional_wrappers/NegateConditionalWrapper.hpp
irtree/tree_wrappers/conditional_wrappers/AndConditionalWrapper.hpp
../include/irtree/irtree/tree_wrappers/conditional_wrappers/AndConditionalWrapper.hpp
irtree/tree_wrappers/conditional_wrappers/OrConditionalWrapper.hpp
../include/irtree/irtree/tree_wrappers/conditional_wrappers/OrConditionalWrapper.hpp
irtree/tree_wrappers/conditional_wrappers/RelativeConditionalWrapper.hpp
../include/irtree/irtree/tree_wrappers/conditional_wrappers/RelativeConditionalWrapper.hpp
irtree/generators/Label.hpp
../include/irtree/irtree/generators/Label.hpp
irtree/generators/Temporary.hpp
../include/irtree/irtree/generators/Temporary.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/irtree/nodes/expressions/Expression.hpp
irtree/nodes/BaseElement.hpp
../include/irtree/irtree/nodes/BaseElement.hpp
irtree/nodes/statements/Statement.hpp
../include/irtree/irtree/nodes/statements/Statement.hpp
irtree/nodes/statements/ExpStatement.hpp
../include/irtree/irtree/nodes/statements/ExpStatement.hpp
irtree/nodes/statements/JumpConditionalStatement.hpp
../include/irtree/irtree/nodes/statements/JumpConditionalStatement.hpp
irtree/nodes/statements/JumpStatement.hpp
../include/irtree/irtree/nodes/statements/JumpStatement.hpp
irtree/nodes/statements/MoveStatement.hpp
../include/irtree/irtree/nodes/statements/MoveStatement.hpp
irtree/nodes/statements/SeqStatement.hpp
../include/irtree/irtree/nodes/statements/SeqStatement.hpp
irtree/nodes/statements/LabelStatement.hpp
../include/irtree/irtree/nodes/statements/LabelStatement.hpp
irtree/nodes/expressions/ConstExpression.hpp
../include/irtree/irtree/nodes/expressions/ConstExpression.hpp
irtree/nodes/expressions/BinopExpression.hpp
../include/irtree/irtree/nodes/expressions/BinopExpression.hpp
irtree/nodes/expressions/TempExpression.hpp
../include/irtree/irtree/nodes/expressions/TempExpression.hpp
irtree/nodes/expressions/MemExpression.hpp
../include/irtree/irtree/nodes/expressions/MemExpression.hpp
irtree/nodes/expressions/CallExpression.hpp
../include/irtree/irtree/nodes/expressions/CallExpression.hpp
irtree/nodes/expressions/NameExpression.hpp
../include/irtree/irtree/nodes/expressions/NameExpression.hpp
irtree/nodes/expressions/EseqExpression.hpp
../include/irtree/irtree/nodes/expressions/EseqExpression.hpp
irtree/nodes/ExpressionList.hpp
../include/irtree/irtree/nodes/ExpressionList.hpp
irtree/visitors/PrintVisitor.hpp
../include/irtree/irtree/visitors/PrintVisitor.hpp
irtree/visitors/DoubleCallEliminationVisitor.hpp
../include/irtree/irtree/visitors/DoubleCallEliminationVisitor.hpp
irtree/visitors/EseqEliminationVisitor.hpp
../include/irtree/irtree/visitors/EseqEliminationVisitor.hpp
irtree/visitors/LinearizeVisitor.hpp
../include/irtree/irtree/visitors/LinearizeVisitor.hpp
irtree/types/LogicOperatorType.hpp
../include/irtree/irtree/types/LogicOperatorType.hpp
irtree/types/BinaryOperatorType.hpp
../include/irtree/irtree/types/BinaryOperatorType.hpp

../include/irtree/forward_decl.hpp

../include/irtree/generators/Label.hpp
string
-
memory
-

../include/irtree/generators/Temporary.hpp
string
-
memory
-

../include/irtree/nodes/BaseElement.hpp
memory
-
irtree/visitors/Visitor.hpp
../include/irtree/nodes/irtree/visitors/Visitor.hpp

../include/irtree/nodes/ExpressionList.hpp
vector
-
irtree/nodes/BaseElement.hpp
../include/irtree/nodes/irtree/nodes/BaseElement.hpp

../include/irtree/nodes/expressions/BinopExpression.hpp
irtree/types/BinaryOperatorType.hpp
../include/irtree/nodes/expressions/irtree/types/BinaryOperatorType.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/nodes/expressions/irtree/nodes/expressions/Expression.hpp

../include/irtree/nodes/expressions/CallExpression.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/nodes/expressions/irtree/nodes/expressions/Expression.hpp

../include/irtree/nodes/expressions/ConstExpression.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/nodes/expressions/irtree/nodes/expressions/Expression.hpp

../include/irtree/nodes/expressions/EseqExpression.hpp
irtree/nodes/statements/Statement.hpp
../include/irtree/nodes/expressions/irtree/nodes/statements/Statement.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/nodes/expressions/irtree/nodes/expressions/Expression.hpp

../include/irtree/nodes/expressions/Expression.hpp
irtree/nodes/BaseElement.hpp
../include/irtree/nodes/expressions/irtree/nodes/BaseElement.hpp

../include/irtree/nodes/expressions/MemExpression.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/nodes/expressions/irtree/nodes/expressions/Expression.hpp

../include/irtree/nodes/expressions/NameExpression.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/nodes/expressions/irtree/nodes/expressions/Expression.hpp
irtree/generators/Label.hpp
../include/irtree/nodes/expressions/irtree/generators/Label.hpp

../include/irtree/nodes/expressions/TempExpression.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/nodes/expressions/irtree/nodes/expressions/Expression.hpp
irtree/generators/Temporary.hpp
../include/irtree/nodes/expressions/irtree/generators/Temporary.hpp

../include/irtree/nodes/statements/ExpStatement.hpp
irtree/nodes/statements/Statement.hpp
../include/irtree/nodes/statements/irtree/nodes/statements/Statement.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/nodes/statements/irtree/nodes/expressions/Expression.hpp

../include/irtree/nodes/statements/JumpConditionalStatement.hpp
irtree/nodes/statements/Statement.hpp
../include/irtree/nodes/statements/irtree/nodes/statements/Statement.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/nodes/statements/irtree/nodes/expressions/Expression.hpp
irtree/types/LogicOperatorType.hpp
../include/irtree/nodes/statements/irtree/types/LogicOperatorType.hpp
irtree/generators/Label.hpp
../include/irtree/nodes/statements/irtree/generators/Label.hpp

../include/irtree/nodes/statements/JumpStatement.hpp
irtree/nodes/statements/Statement.hpp
../include/irtree/nodes/statements/irtree/nodes/statements/Statement.hpp
irtree/generators/Label.hpp
../include/irtree/nodes/statements/irtree/generators/Label.hpp

../include/irtree/nodes/statements/LabelStatement.hpp
irtree/nodes/statements/Statement.hpp
../include/irtree/nodes/statements/irtree/nodes/statements/Statement.hpp
irtree/generators/Label.hpp
../include/irtree/nodes/statements/irtree/generators/Label.hpp

../include/irtree/nodes/statements/MoveStatement.hpp
irtree/nodes/statements/Statement.hpp
../include/irtree/nodes/statements/irtree/nodes/statements/Statement.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/nodes/statements/irtree/nodes/expressions/Expression.hpp

../include/irtree/nodes/statements/SeqStatement.hpp
irtree/nodes/statements/Statement.hpp
../include/irtree/nodes/statements/irtree/nodes/statements/Statement.hpp

../include/irtree/nodes/statements/Statement.hpp
irtree/nodes/BaseElement.hpp
../include/irtree/nodes/statements/irtree/nodes/BaseElement.hpp

../include/irtree/tree_wrappers/ExpressionWrapper.hpp
irtree/tree_wrappers/SubtreeWrapper.hpp
../include/irtree/tree_wrappers/irtree/tree_wrappers/SubtreeWrapper.hpp
irtree/nodes/statements/Statement.hpp
../include/irtree/tree_wrappers/irtree/nodes/statements/Statement.hpp

../include/irtree/tree_wrappers/StatementWrapper.hpp
irtree/tree_wrappers/SubtreeWrapper.hpp
../include/irtree/tree_wrappers/irtree/tree_wrappers/SubtreeWrapper.hpp

../include/irtree/tree_wrappers/SubtreeWrapper.hpp
irtree/generators/Label.hpp
../include/irtree/tree_wrappers/irtree/generators/Label.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/tree_wrappers/irtree/nodes/expressions/Expression.hpp
irtree/nodes/statements/Statement.hpp
../include/irtree/tree_wrappers/irtree/nodes/statements/Statement.hpp

../include/irtree/tree_wrappers/conditional_wrappers/AndConditionalWrapper.hpp
irtree/tree_wrappers/conditional_wrappers/ConditionalWrapper.hpp
../include/irtree/tree_wrappers/conditional_wrappers/irtree/tree_wrappers/conditional_wrappers/ConditionalWrapper.hpp

../include/irtree/tree_wrappers/conditional_wrappers/ConditionalWrapper.hpp
irtree/tree_wrappers/SubtreeWrapper.hpp
../include/irtree/tree_wrappers/conditional_wrappers/irtree/tree_wrappers/SubtreeWrapper.hpp

../include/irtree/tree_wrappers/conditional_wrappers/NegateConditionalWrapper.hpp
irtree/tree_wrappers/conditional_wrappers/ConditionalWrapper.hpp
../include/irtree/tree_wrappers/conditional_wrappers/irtree/tree_wrappers/conditional_wrappers/ConditionalWrapper.hpp

../include/irtree/tree_wrappers/conditional_wrappers/OrConditionalWrapper.hpp
irtree/tree_wrappers/conditional_wrappers/ConditionalWrapper.hpp
../include/irtree/tree_wrappers/conditional_wrappers/irtree/tree_wrappers/conditional_wrappers/ConditionalWrapper.hpp

../include/irtree/tree_wrappers/conditional_wrappers/RelativeConditionalWrapper.hpp
irtree/tree_wrappers/conditional_wrappers/ConditionalWrapper.hpp
../include/irtree/tree_wrappers/conditional_wrappers/irtree/tree_wrappers/conditional_wrappers/ConditionalWrapper.hpp
irtree/types/LogicOperatorType.hpp
../include/irtree/tree_wrappers/conditional_wrappers/irtree/types/LogicOperatorType.hpp

../include/irtree/types/BinaryOperatorType.hpp
string
-

../include/irtree/types/LogicOperatorType.hpp
string
-

../include/irtree/visitors/BaseElements.hpp
irtree/nodes/expressions/NameExpression.hpp
../include/irtree/visitors/irtree/nodes/expressions/NameExpression.hpp
irtree/nodes/expressions/CallExpression.hpp
../include/irtree/visitors/irtree/nodes/expressions/CallExpression.hpp
irtree/nodes/expressions/BinopExpression.hpp
../include/irtree/visitors/irtree/nodes/expressions/BinopExpression.hpp
irtree/nodes/expressions/ConstExpression.hpp
../include/irtree/visitors/irtree/nodes/expressions/ConstExpression.hpp
irtree/nodes/expressions/MemExpression.hpp
../include/irtree/visitors/irtree/nodes/expressions/MemExpression.hpp
irtree/nodes/expressions/TempExpression.hpp
../include/irtree/visitors/irtree/nodes/expressions/TempExpression.hpp
irtree/nodes/statements/ExpStatement.hpp
../include/irtree/visitors/irtree/nodes/statements/ExpStatement.hpp
irtree/nodes/statements/JumpConditionalStatement.hpp
../include/irtree/visitors/irtree/nodes/statements/JumpConditionalStatement.hpp
irtree/nodes/statements/JumpStatement.hpp
../include/irtree/visitors/irtree/nodes/statements/JumpStatement.hpp
irtree/nodes/statements/LabelStatement.hpp
../include/irtree/visitors/irtree/nodes/statements/LabelStatement.hpp
irtree/nodes/statements/MoveStatement.hpp
../include/irtree/visitors/irtree/nodes/statements/MoveStatement.hpp
irtree/nodes/statements/SeqStatement.hpp
../include/irtree/visitors/irtree/nodes/statements/SeqStatement.hpp
irtree/nodes/ExpressionList.hpp
../include/irtree/visitors/irtree/nodes/ExpressionList.hpp

../include/irtree/visitors/DoubleCallEliminationVisitor.hpp
irtree/visitors/TemplateVisitor.hpp
../include/irtree/visitors/irtree/visitors/TemplateVisitor.hpp
irtree/visitors/IdentVisitor.hpp
../include/irtree/visitors/irtree/visitors/IdentVisitor.hpp
irtree/visitors/VisitorStruct.hpp
../include/irtree/visitors/irtree/visitors/VisitorStruct.hpp

../include/irtree/visitors/EseqEliminationVisitor.hpp
irtree/visitors/TemplateVisitor.hpp
../include/irtree/visitors/irtree/visitors/TemplateVisitor.hpp
irtree/visitors/IdentVisitor.hpp
../include/irtree/visitors/irtree/visitors/IdentVisitor.hpp
irtree/visitors/VisitorStruct.hpp
../include/irtree/visitors/irtree/visitors/VisitorStruct.hpp

../include/irtree/visitors/IdentVisitor.hpp
irtree/visitors/TemplateVisitor.hpp
../include/irtree/visitors/irtree/visitors/TemplateVisitor.hpp
irtree/visitors/BaseElements.hpp
../include/irtree/visitors/irtree/visitors/BaseElements.hpp
irtree/nodes/expressions/EseqExpression.hpp
../include/irtree/visitors/irtree/nodes/expressions/EseqExpression.hpp

../include/irtree/visitors/LinearizeVisitor.hpp
irtree/visitors/TemplateVisitor.hpp
../include/irtree/visitors/irtree/visitors/TemplateVisitor.hpp
irtree/visitors/IdentVisitor.hpp
../include/irtree/visitors/irtree/visitors/IdentVisitor.hpp
irtree/visitors/VisitorStruct.hpp
../include/irtree/visitors/irtree/visitors/VisitorStruct.hpp

../include/irtree/visitors/PrintVisitor.hpp
string
-
fstream
-
irtree/visitors/Visitor.hpp
../include/irtree/visitors/irtree/visitors/Visitor.hpp

../include/irtree/visitors/TemplateVisitor.hpp
irtree/visitors/Visitor.hpp
../include/irtree/visitors/irtree/visitors/Visitor.hpp
irtree/nodes/BaseElement.hpp
../include/irtree/visitors/irtree/nodes/BaseElement.hpp

../include/irtree/visitors/Visitor.hpp
memory
-
debug.h
../include/irtree/visitors/debug.h
irtree/forward_decl.hpp
../include/irtree/visitors/irtree/forward_decl.hpp

../include/irtree/visitors/VisitorStruct.hpp
irtree/nodes/expressions/Expression.hpp
../include/irtree/visitors/irtree/nodes/expressions/Expression.hpp
irtree/nodes/statements/Statement.hpp
../include/irtree/visitors/irtree/nodes/statements/Statement.hpp

/mnt/windows_data/MISHA/STUDY/MIPT/2grade/2sem/compilers/compilers_course_4sem_2020/milestone8_blocks/include/irtree/blocks/BlockTree.cpp
irtree/blocks/BlockTree.hpp
/mnt/windows_data/MISHA/STUDY/MIPT/2grade/2sem/compilers/compilers_course_4sem_2020/milestone8_blocks/include/irtree/blocks/irtree/blocks/BlockTree.hpp
cassert
-
stack
-
unordered_map
-
unordered_set
-
queue
-

