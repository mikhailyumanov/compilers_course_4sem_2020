>>> IrtreeBuildVisitor: Program
>>> PrintVisitor: Program
GoDown
Current state: parent: 0x560514660f20 ; child index: 1 num_children: 2 
operator->; current_parent: 0x560514660f20 child_index: 1 num_children: 2 
GoDown
Current state: parent: 0x560514661480 ; child index: 0 num_children: 1 
>>> PrintVisitor: ClassDecl Five 
SymbolTreeVisitor::FunctionScopeDown
Return type: int; Args: 
GoDown
Current state: parent: 0x5605146615a0 ; child index: 0 num_children: 1 
Return type: int; Args: 
>>> PrintVisitor: MethodDecl Return type: int; Args:  GetNumber 
GetNumber Return type: int; Args:  operator->; current_parent: 0x5605146615a0 child_index: 0 num_children: 1 
Return type: int; Args:  
>>> PrintVisitor: ReturnStmt
>>> PrintVisitor: IntExpr 5 
MethodDecl:  Return type: int; Args:  operator->; current_parent: 0x5605146615a0 child_index: 0 num_children: 1 
Return type: int; Args:  
operator->; current_parent: 0x5605146615a0 child_index: 0 num_children: 1 
Return type: int; Args: 
ScopeLayerTree::SetFunctionScope Return type: int; Args:  Return type: int; Args:  
GoUp
Current state: parent: 0x560514661480 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x560514660f20 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x560514661480 ; child index: 1 num_children: 2 
>>> PrintVisitor: ClassDecl Number 
>>> PrintVisitor: VarDecl type: int, is_array: false value 
value type: int, is_array: false 
operator->; current_parent: 0x560514661480 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x560514661480 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x560514661480 child_index: 1 num_children: 2 
VarDecl: IsMethodDecl
SymbolTreeVisitor::FunctionScopeDown
Return type: int; Args: 
GoDown
Current state: parent: 0x560514661bd0 ; child index: 0 num_children: 1 
Return type: int; Args: 
>>> PrintVisitor: MethodDecl Return type: int; Args:  GetNumber 
GetNumber Return type: int; Args:  operator->; current_parent: 0x560514661bd0 child_index: 0 num_children: 1 
Return type: int; Args:  
>>> PrintVisitor: ReturnStmt
>>> PrintVisitor: IdentExpr value 
operator->; current_parent: 0x560514661bd0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: int; Args:  
operator->; current_parent: 0x560514661bd0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: int; Args:  
MethodDecl:  Return type: int; Args:  operator->; current_parent: 0x560514661bd0 child_index: 0 num_children: 1 
Return type: int; Args:  
operator->; current_parent: 0x560514661bd0 child_index: 0 num_children: 1 
Return type: int; Args: 
ScopeLayerTree::SetFunctionScope Return type: int; Args:  Return type: int; Args:  
GoUp
Current state: parent: 0x560514661480 ; child index: 1 num_children: 2 
SymbolTreeVisitor::FunctionScopeDown
Return type: void; Args: new_value(type: int, is_array: false), 
GoDown
Current state: parent: 0x560514661bd0 ; child index: 1 num_children: 2 
Return type: void; Args: new_value(type: int, is_array: false), 
>>> PrintVisitor: MethodDecl Return type: void; Args: new_value(type: int, is_array: false),  SetNumber 
SetNumber Return type: void; Args: new_value(type: int, is_array: false),  operator->; current_parent: 0x560514661bd0 child_index: 1 num_children: 2 
Return type: void; Args: new_value(type: int, is_array: false),  
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x560514661bd0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_value(type: int, is_array: false),  
ScopeLayer::IsArgument: new_value value
>>> PrintVisitor: IdentExpr new_value 
operator->; current_parent: 0x560514661bd0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_value(type: int, is_array: false),  
ScopeLayer::IsArgument: new_value new_value
operator->; current_parent: 0x560514661bd0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_value(type: int, is_array: false),  
ScopeLayer::IsArgument: new_value new_value
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_value(type: int, is_array: false),  
ScopeLayer::IsArgument: new_value new_value
operator->; current_parent: 0x560514661bd0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_value(type: int, is_array: false),  
ScopeLayer::IsArgument: new_value value
MethodDecl:  Return type: void; Args: new_value(type: int, is_array: false),  operator->; current_parent: 0x560514661bd0 child_index: 1 num_children: 2 
Return type: void; Args: new_value(type: int, is_array: false),  
operator->; current_parent: 0x560514661bd0 child_index: 1 num_children: 2 
Return type: void; Args: new_value(type: int, is_array: false), 
ScopeLayerTree::SetFunctionScope Return type: void; Args: new_value(type: int, is_array: false),  Return type: void; Args: new_value(type: int, is_array: false),  
GoUp
Current state: parent: 0x560514661480 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x560514660f20 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x560514661480 ; child index: 2 num_children: 3 
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
>>> PrintVisitor: MainClass
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: Number, is_array: false n 
n type: Number, is_array: false 
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
>>> PrintVisitor: NewExpr type =  Number 
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
>>> PrintVisitor: MethodStmt
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr n 
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
SetNumber
>>> PrintVisitor: IntExpr 0 
GoDown
Current state: parent: 0x56051466e090 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x560514661480 ; child index: 2 num_children: 3 
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: Five, is_array: false f 
f type: Five, is_array: false 
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
>>> PrintVisitor: NewExpr type =  Five 
operator->; current_parent: 0x560514661480 child_index: 2 num_children: 3 
GoDown
Current state: parent: 0x56051466e090 ; child index: 1 num_children: 2 
>>> PrintVisitor: WhileStmt
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: MethodExpr
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr n 
operator->; current_parent: 0x56051466e090 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
operator->; current_parent: 0x56051466e090 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
GetNumber
GoDown
Current state: parent: 0x56051466e4e0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x56051466e090 ; child index: 1 num_children: 2 
>>> PrintVisitor: MethodExpr
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr f 
operator->; current_parent: 0x56051466e090 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
operator->; current_parent: 0x56051466e090 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
GetNumber
GoDown
Current state: parent: 0x56051466e4e0 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x56051466e090 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x56051466e4e0 ; child index: 2 num_children: 3 
>>> PrintVisitor: StmtListStmt
>>> PrintVisitor: PrintStmt
>>> PrintVisitor: MethodExpr
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr n 
operator->; current_parent: 0x56051466e4e0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument
operator->; current_parent: 0x56051466e4e0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument
GetNumber
GoDown
Current state: parent: 0x56051466e8a0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x56051466e4e0 ; child index: 2 num_children: 3 
>>> PrintVisitor: MethodStmt
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr n 
operator->; current_parent: 0x56051466e4e0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument
operator->; current_parent: 0x56051466e4e0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument
SetNumber
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: MethodExpr
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr n 
operator->; current_parent: 0x56051466e4e0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument
operator->; current_parent: 0x56051466e4e0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument
GetNumber
GoDown
Current state: parent: 0x56051466e8a0 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x56051466e4e0 ; child index: 2 num_children: 3 
>>> PrintVisitor: IntExpr 1 
GoDown
Current state: parent: 0x56051466e8a0 ; child index: 2 num_children: 3 
GoUp
Current state: parent: 0x56051466e4e0 ; child index: 2 num_children: 3 
GoUp
Current state: parent: 0x56051466e090 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x560514661480 ; child index: 2 num_children: 3 
GoUp
Current state: parent: 0x560514660f20 ; child index: 1 num_children: 2 
>>> IrtreeBuildVisitor: ClassDecl
>>> IrtreeBuildVisitor: MethodDecl
>>> IrtreeBuildVisitor: ReturnStmt
>>> IrtreeBuildVisitor: IntExpr
>>> IrtreeBuildVisitor: ClassDecl
>>> IrtreeBuildVisitor: VarDecl
>>> IrtreeBuildVisitor: MethodDecl
>>> IrtreeBuildVisitor: ReturnStmt
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
IRTree::Subscript
>>> IrtreeBuildVisitor: MethodDecl
>>> IrtreeBuildVisitor: AssignmentStmt
>>> IrtreeBuildVisitor: Lvalue
IRTree::Subscript
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: MainClass
>>> IrtreeBuildVisitor: LocalVarDeclStmt
>>> IrtreeBuildVisitor: VarDecl
>>> IrtreeBuildVisitor: AssignmentStmt
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: NewExpr
>>> IrtreeBuildVisitor: MethodStmt
>>> IrtreeBuildVisitor: MethodInvocation
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: IntExpr
>>> IrtreeBuildVisitor: LocalVarDeclStmt
>>> IrtreeBuildVisitor: VarDecl
>>> IrtreeBuildVisitor: AssignmentStmt
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: NewExpr
>>> IrtreeBuildVisitor: WhileStmt
>>> IrtreeBuildVisitor: BinOpExpr
>>> IrtreeBuildVisitor: MethodExpr
>>> IrtreeBuildVisitor: MethodInvocation
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: MethodExpr
>>> IrtreeBuildVisitor: MethodInvocation
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: StmtListStmt
>>> IrtreeBuildVisitor: PrintStmt
>>> IrtreeBuildVisitor: MethodExpr
>>> IrtreeBuildVisitor: MethodInvocation
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: MethodStmt
>>> IrtreeBuildVisitor: MethodInvocation
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: BinOpExpr
>>> IrtreeBuildVisitor: MethodExpr
>>> IrtreeBuildVisitor: MethodInvocation
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: IntExpr
EseqElimination::SeqStatement
EseqElimination::MoveStatement
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::ConstExpression
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 8 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 12 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::EseqExpression (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 14 
move: !is_target_eseq && is_source_eseq
move: target is MemExpr
EseqElimination::MoveStatement (finish)
EseqElimination::SeqStatement
EseqElimination::ExpStatement
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::ConstExpression
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 8 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 12 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::EseqExpression (finish)
exp stmt: pre `is eseq`
EseqElimination::IsEseq element type: 14 
EseqElimination::ExpStatement (finish)
EseqElimination::SeqStatement
EseqElimination::MoveStatement
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::ConstExpression
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 8 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 12 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::EseqExpression (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 14 
move: !is_target_eseq && is_source_eseq
move: target is MemExpr
EseqElimination::MoveStatement (finish)
EseqElimination::SeqStatement
EseqElimination::LabelStatement
EseqElimination::SeqStatement
EseqElimination::JumpConditionalStatement
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 12 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::EseqExpression (finish)
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 12 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::EseqExpression (finish)
EseqElimination::IsEseq element type: 14 
EseqElimination::IsEseq element type: 14 
cjump: is_lhs_eseq && is_rhs_eseq
EseqElimination::JumpConditionalStatement (finish)
EseqElimination::SeqStatement
EseqElimination::LabelStatement
EseqElimination::SeqStatement
EseqElimination::SeqStatement
EseqElimination::ExpStatement
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 12 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::EseqExpression (finish)
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 14 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 14 
move: !is_target_eseq && is_source_eseq
move: target is temp
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::EseqExpression (finish)
exp stmt: pre `is eseq`
EseqElimination::IsEseq element type: 14 
EseqElimination::ExpStatement (finish)
EseqElimination::ExpStatement
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::BinopExpression
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 12 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::EseqExpression (finish)
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 14 
EseqElimination::IsEseq element type: 8 
binop: is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 14 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 14 
move: !is_target_eseq && is_source_eseq
move: target is temp
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::EseqExpression (finish)
exp stmt: pre `is eseq`
EseqElimination::IsEseq element type: 14 
EseqElimination::ExpStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement
EseqElimination::JumpStatement
EseqElimination::LabelStatement
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
build blocks: L2
build blocks: 1
build blocks: L1
build blocks: 1
build blocks: %main
build blocks: 1
build blocks: L0
build blocks: 1
BlockTree::PrintJouette
DFS
%main
DFS
L0
DFS
L2
DFS
%done
DFS
DFS
DFS
L1
DFS
DFS
DFS
DFS
DFS
DFS
%main
DFS
L0
DFS
L2
DFS
%done
DFS
DFS
DFS
L1
DFS
DFS
DFS
DFS
DFS
JouetteAssembler::LabelStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::BinopExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::ConstExpression
JouetteAssembler::CallExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::ConstExpression
JouetteAssembler::CallExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::BinopExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::ConstExpression
JouetteAssembler::CallExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MoveStatement
JouetteAssembler::JumpStatement
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Call start
Label operator<<
Label operator<< (end)
PrintVisitor::Call
PrintVisitor::Store start
PrintVisitor::Store
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Call start
Label operator<<
Label operator<< (end)
PrintVisitor::Call
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Call start
Label operator<<
Label operator<< (end)
PrintVisitor::Call
PrintVisitor::Store start
PrintVisitor::Store
PrintVisitor::Jump start
Label operator<<
Label operator<< (end)
PrintVisitor::Jump
JouetteAssembler::LabelStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::CallExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::CallExpression
JouetteAssembler::MoveStatement
JouetteAssembler::JumpConditionalStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::JumpConditionalStatement
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Call start
Label operator<<
Label operator<< (end)
PrintVisitor::Call
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Call start
Label operator<<
Label operator<< (end)
PrintVisitor::Call
PrintVisitor::Sub start
PrintVisitor::Sub
PrintVisitor::Blt start
Label operator<<
Label operator<< (end)
PrintVisitor::Blt
JouetteAssembler::LabelStatement
JouetteAssembler::JumpStatement
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
PrintVisitor::Jump start
Label operator<<
Label operator<< (end)
PrintVisitor::Jump
JouetteAssembler::LabelStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::CallExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::CallExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::CallExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::BinopExpression
JouetteAssembler::CallExpression
JouetteAssembler::MoveStatement
JouetteAssembler::JumpStatement
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Call start
Label operator<<
Label operator<< (end)
PrintVisitor::Call
PrintVisitor::Call start
Label operator<<
Label operator<< (end)
PrintVisitor::Call
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Call start
Label operator<<
Label operator<< (end)
PrintVisitor::Call
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Call start
Label operator<<
Label operator<< (end)
PrintVisitor::Call
PrintVisitor::Jump start
Label operator<<
Label operator<< (end)
PrintVisitor::Jump
EseqElimination::SeqStatement
EseqElimination::LabelStatement
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::BinopExpression
EseqElimination::ConstExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 8 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 9 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 11 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::SeqStatement (finish)
0
0
1
build blocks: Number::GetNumber
build blocks: 1
BlockTree::PrintTree
SeqStatement:
LabelStatement: 
SeqStatement:
MoveStatement:
TempExpression: 
MemExpression: 
BinopExpression: 
MemExpression: 
BinopExpression: 
TempExpression: 
ConstExpression 
BinopExpression: 
ConstExpression 
ConstExpression 
SeqStatement:
JumpStatement: 
SeqStatement:
LabelStatement: 
LabelStatement: 
BFS
BFS
BFS finished
BlockTree::PrintJouette
DFS
Number::GetNumber
DFS
%done
DFS
DFS
DFS
DFS
Number::GetNumber
DFS
%done
DFS
DFS
DFS
JouetteAssembler::LabelStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::ConstExpression
JouetteAssembler::ConstExpression
JouetteAssembler::BinopExpression
JouetteAssembler::BinopExpression
JouetteAssembler::MemExpression
JouetteAssembler::MoveStatement
JouetteAssembler::ReturnStatement
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Mul start
PrintVisitor::Mul
PrintVisitor::Add start
PrintVisitor::Add
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Return start
PrintVisitor::Return
EseqElimination::SeqStatement
EseqElimination::LabelStatement
EseqElimination::MoveStatement
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::BinopExpression
EseqElimination::ConstExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 8 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 9 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 11 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::SeqStatement (finish)
0
0
1
build blocks: Number::SetNumber
build blocks: 1
BlockTree::PrintTree
SeqStatement:
LabelStatement: 
SeqStatement:
MoveStatement:
MemExpression: 
BinopExpression: 
MemExpression: 
BinopExpression: 
TempExpression: 
ConstExpression 
BinopExpression: 
ConstExpression 
ConstExpression 
MemExpression: 
BinopExpression: 
TempExpression: 
ConstExpression 
SeqStatement:
JumpStatement: 
SeqStatement:
LabelStatement: 
LabelStatement: 
BFS
BFS
BFS finished
BlockTree::PrintJouette
DFS
Number::SetNumber
DFS
%done
DFS
DFS
DFS
DFS
Number::SetNumber
DFS
%done
DFS
DFS
DFS
JouetteAssembler::LabelStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::ConstExpression
JouetteAssembler::ConstExpression
JouetteAssembler::BinopExpression
JouetteAssembler::BinopExpression
JouetteAssembler::MemExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::MoveStatement
JouetteAssembler::ReturnStatement
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Mul start
PrintVisitor::Mul
PrintVisitor::Add start
PrintVisitor::Add
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Movem start
PrintVisitor::Movem
PrintVisitor::Return start
PrintVisitor::Return
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
