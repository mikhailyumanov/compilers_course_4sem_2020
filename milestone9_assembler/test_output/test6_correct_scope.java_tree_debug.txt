>>> IrtreeBuildVisitor: Program
>>> PrintVisitor: Program
GoDown
Current state: parent: 0x560a48040f70 ; child index: 1 num_children: 2 
operator->; current_parent: 0x560a48040f70 child_index: 1 num_children: 2 
GoDown
Current state: parent: 0x560a480414d0 ; child index: 0 num_children: 1 
operator->; current_parent: 0x560a480414d0 child_index: 0 num_children: 1 
>>> PrintVisitor: MainClass
operator->; current_parent: 0x560a480414d0 child_index: 0 num_children: 1 
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: int, is_array: false x 
x type: int, is_array: false 
operator->; current_parent: 0x560a480414d0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480414d0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480414d0 child_index: 0 num_children: 1 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x560a480414d0 child_index: 0 num_children: 1 
>>> PrintVisitor: IntExpr 5 
operator->; current_parent: 0x560a480414d0 child_index: 0 num_children: 1 
GoDown
Current state: parent: 0x560a480415f0 ; child index: 0 num_children: 1 
>>> PrintVisitor: StmtListStmt
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: int, is_array: false y 
y type: int, is_array: false 
operator->; current_parent: 0x560a480415f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480415f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480415f0 child_index: 0 num_children: 1 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x560a480415f0 child_index: 0 num_children: 1 
>>> PrintVisitor: IdentExpr x 
operator->; current_parent: 0x560a480415f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480415f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480415f0 child_index: 0 num_children: 1 
GoUp
Current state: parent: 0x560a480414d0 ; child index: 0 num_children: 1 
GoDown
Current state: parent: 0x560a480415f0 ; child index: 1 num_children: 2 
>>> PrintVisitor: StmtListStmt
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: int, is_array: false z 
z type: int, is_array: false 
operator->; current_parent: 0x560a480415f0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480415f0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480415f0 child_index: 1 num_children: 2 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x560a480415f0 child_index: 1 num_children: 2 
>>> PrintVisitor: IdentExpr x 
operator->; current_parent: 0x560a480415f0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480415f0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480415f0 child_index: 1 num_children: 2 
>>> PrintVisitor: IfElseStmt
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: IdentExpr x 
operator->; current_parent: 0x560a480415f0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480415f0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
>>> PrintVisitor: IntExpr 5 
GoDown
Current state: parent: 0x560a48041ad0 ; child index: 0 num_children: 1 
GoDown
Current state: parent: 0x560a48041ce0 ; child index: 0 num_children: 1 
>>> PrintVisitor: StmtListStmt
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: int, is_array: false i 
i type: int, is_array: false 
operator->; current_parent: 0x560a48041ce0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a48041ce0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a48041ce0 child_index: 0 num_children: 1 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x560a48041ce0 child_index: 0 num_children: 1 
>>> PrintVisitor: IntExpr 6 
operator->; current_parent: 0x560a48041ce0 child_index: 0 num_children: 1 
>>> PrintVisitor: PrintStmt
>>> PrintVisitor: IdentExpr i 
operator->; current_parent: 0x560a48041ce0 child_index: 0 num_children: 1 
operator->; current_parent: 0x560a48041ce0 child_index: 0 num_children: 1 
GoUp
Current state: parent: 0x560a48041ad0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x560a480415f0 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x560a48041ad0 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x560a480420a0 ; child index: 0 num_children: 1 
>>> PrintVisitor: StmtListStmt
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: int, is_array: false j 
j type: int, is_array: false 
operator->; current_parent: 0x560a480420a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480420a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x560a480420a0 child_index: 0 num_children: 1 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x560a480420a0 child_index: 0 num_children: 1 
>>> PrintVisitor: IntExpr 7 
operator->; current_parent: 0x560a480420a0 child_index: 0 num_children: 1 
>>> PrintVisitor: PrintStmt
>>> PrintVisitor: IdentExpr j 
operator->; current_parent: 0x560a480420a0 child_index: 0 num_children: 1 
operator->; current_parent: 0x560a480420a0 child_index: 0 num_children: 1 
GoUp
Current state: parent: 0x560a48041ad0 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x560a480415f0 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x560a480414d0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x560a48040f70 ; child index: 1 num_children: 2 
>>> IrtreeBuildVisitor: MainClass
>>> IrtreeBuildVisitor: LocalVarDeclStmt
>>> IrtreeBuildVisitor: VarDecl
>>> IrtreeBuildVisitor: AssignmentStmt
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: IntExpr
>>> IrtreeBuildVisitor: StmtListStmt
>>> IrtreeBuildVisitor: LocalVarDeclStmt
>>> IrtreeBuildVisitor: VarDecl
>>> IrtreeBuildVisitor: AssignmentStmt
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: StmtListStmt
>>> IrtreeBuildVisitor: LocalVarDeclStmt
>>> IrtreeBuildVisitor: VarDecl
>>> IrtreeBuildVisitor: AssignmentStmt
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: IfElseStmt
>>> IrtreeBuildVisitor: BinOpExpr
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: IntExpr
>>> IrtreeBuildVisitor: StmtListStmt
>>> IrtreeBuildVisitor: LocalVarDeclStmt
>>> IrtreeBuildVisitor: VarDecl
>>> IrtreeBuildVisitor: AssignmentStmt
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: IntExpr
>>> IrtreeBuildVisitor: PrintStmt
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: StmtListStmt
>>> IrtreeBuildVisitor: LocalVarDeclStmt
>>> IrtreeBuildVisitor: VarDecl
>>> IrtreeBuildVisitor: AssignmentStmt
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: IntExpr
>>> IrtreeBuildVisitor: PrintStmt
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
EseqElimination::SeqStatement
EseqElimination::MoveStatement
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 8 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::SeqStatement
EseqElimination::MoveStatement
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 11 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::SeqStatement
EseqElimination::MoveStatement
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 11 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::SeqStatement
EseqElimination::JumpConditionalStatement
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 8 
cjump: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::JumpConditionalStatement (finish)
EseqElimination::SeqStatement
EseqElimination::LabelStatement
EseqElimination::SeqStatement
EseqElimination::SeqStatement
EseqElimination::MoveStatement
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 8 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::ExpStatement
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 12 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::EseqExpression (finish)
exp stmt: pre `is eseq`
EseqElimination::IsEseq element type: 14 
EseqElimination::ExpStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement
EseqElimination::JumpStatement
EseqElimination::SeqStatement
EseqElimination::LabelStatement
EseqElimination::SeqStatement
EseqElimination::SeqStatement
EseqElimination::MoveStatement
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 11 
EseqElimination::IsEseq element type: 8 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::ExpStatement
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 8 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::MemExpression (finish)
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 11 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 12 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 10 
EseqElimination::EseqExpression (finish)
exp stmt: pre `is eseq`
EseqElimination::IsEseq element type: 14 
EseqElimination::ExpStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::LabelStatement
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
build blocks: L2
build blocks: 1
build blocks: L1
build blocks: 1
build blocks: %main
build blocks: 1
build blocks: L0
build blocks: 1
BlockTree::PrintJouette
DFS
%main
DFS
L1
DFS
L2
DFS
%done
DFS
DFS
DFS
DFS
L0
DFS
DFS
DFS
DFS
DFS
%main
DFS
L1
DFS
L2
DFS
%done
DFS
DFS
DFS
DFS
L0
DFS
DFS
DFS
DFS
JouetteAssembler::LabelStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::ConstExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::MoveStatement
JouetteAssembler::JumpConditionalStatement start
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::ConstExpression
JouetteAssembler::JumpConditionalStatement
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Store start
PrintVisitor::Store
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Store start
PrintVisitor::Store
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Store start
PrintVisitor::Store
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Sub start
PrintVisitor::Sub
PrintVisitor::Blt start
Label operator<<
Label operator<< (end)
PrintVisitor::Blt
PrintVisitor::Bne start
Label operator<<
Label operator<< (end)
PrintVisitor::Bne
JouetteAssembler::LabelStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::ConstExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::CallExpression
JouetteAssembler::MoveStatement
JouetteAssembler::JumpStatement
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Store start
PrintVisitor::Store
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Call start
Label operator<<
Label operator<< (end)
PrintVisitor::Call
PrintVisitor::Jump start
Label operator<<
Label operator<< (end)
PrintVisitor::Jump
JouetteAssembler::LabelStatement
JouetteAssembler::JumpStatement
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
PrintVisitor::Jump start
Label operator<<
Label operator<< (end)
PrintVisitor::Jump
JouetteAssembler::LabelStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::ConstExpression
JouetteAssembler::MoveStatement
JouetteAssembler::MoveStatement start
JouetteAssembler::TempExpression
JouetteAssembler::TempExpression
JouetteAssembler::MemExpression
JouetteAssembler::CallExpression
JouetteAssembler::MoveStatement
JouetteAssembler::JumpStatement
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
PrintVisitor::Addi start
PrintVisitor::Addi
PrintVisitor::Store start
PrintVisitor::Store
PrintVisitor::Load start
PrintVisitor::Load
PrintVisitor::Call start
Label operator<<
Label operator<< (end)
PrintVisitor::Call
PrintVisitor::Jump start
Label operator<<
Label operator<< (end)
PrintVisitor::Jump
Label::Accept
PrintVisitor::Label (start)
Label operator<<
Label operator<< (end)
PrintVisitor::Label
