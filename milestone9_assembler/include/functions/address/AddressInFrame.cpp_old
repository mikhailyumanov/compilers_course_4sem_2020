//
// Created by akhtyamovpavel on 4/14/20.
//

#include "functions/address/AddressInFrame.hpp"
#include "irtree/nodes/expressions/BinopExpression.hpp"
#include "irtree/nodes/expressions/ConstExpression.hpp"
#include "irtree/nodes/expressions/MemExpression.hpp"


namespace IRT {

AddressInFrame::AddressInFrame(
    std::shared_ptr<Address> frame_address, int offset)
  : frame_address_(frame_address), offset_(offset) {
}

std::shared_ptr<Expression> AddressInFrame::ToExpression() {
  std::shared_ptr<Expression> offset_expression;
  if (offset_ != 0) {
    offset_expression = std::make_shared<BinopExpression>(
      BinaryOperatorType::PLUS,
      frame_address_->ToExpression(),
      std::make_shared<ConstExpression>(offset_)
    );
  } else {
    offset_expression = frame_address_->ToExpression();
  }

  return std::make_shared<MemExpression>(offset_expression);
}

}
