>>> Interpreter: Program
>>> PrintVisitor: Program
GoDown
Current state: parent: 0x55c232940920 ; child index: 1 num_children: 2 
operator->; current_parent: 0x55c232940920 child_index: 1 num_children: 2 
GoDown
Current state: parent: 0x55c232941770 ; child index: 0 num_children: 1 
>>> PrintVisitor: ClassDecl Dog 
>>> PrintVisitor: VarDecl type: int, is_array: false dog_index 
dog_index type: int, is_array: false 
operator->; current_parent: 0x55c232941770 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c232941770 child_index: 0 num_children: 1 
VarDecl: IsMethodDecl
SymbolTreeVisitor::FunctionScopeDown
Return type: void; Args: idx(type: int, is_array: false), 
GoDown
Current state: parent: 0x55c232941890 ; child index: 0 num_children: 1 
Return type: void; Args: idx(type: int, is_array: false), 
>>> PrintVisitor: MethodDecl Return type: void; Args: idx(type: int, is_array: false),  SetIndex 
SetIndex Return type: void; Args: idx(type: int, is_array: false),  operator->; current_parent: 0x55c232941890 child_index: 0 num_children: 1 
Return type: void; Args: idx(type: int, is_array: false),  
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c232941890 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx dog_index
>>> PrintVisitor: IdentExpr idx 
operator->; current_parent: 0x55c232941890 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx idx
operator->; current_parent: 0x55c232941890 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx idx
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx idx
operator->; current_parent: 0x55c232941890 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx dog_index
MethodDecl:  Return type: void; Args: idx(type: int, is_array: false),  operator->; current_parent: 0x55c232941890 child_index: 0 num_children: 1 
Return type: void; Args: idx(type: int, is_array: false),  
operator->; current_parent: 0x55c232941890 child_index: 0 num_children: 1 
Return type: void; Args: idx(type: int, is_array: false), 
ScopeLayerTree::SetFunctionScope Return type: void; Args: idx(type: int, is_array: false),  Return type: void; Args: idx(type: int, is_array: false),  
GoUp
Current state: parent: 0x55c232941770 ; child index: 0 num_children: 1 
SymbolTreeVisitor::FunctionScopeDown
Return type: void; Args: 
GoDown
Current state: parent: 0x55c232941890 ; child index: 1 num_children: 2 
Return type: void; Args: 
>>> PrintVisitor: MethodDecl Return type: void; Args:  Bark 
Bark Return type: void; Args:  operator->; current_parent: 0x55c232941890 child_index: 1 num_children: 2 
Return type: void; Args:  
>>> PrintVisitor: PrintStmt
>>> PrintVisitor: IdentExpr dog_index 
operator->; current_parent: 0x55c232941890 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args:  
operator->; current_parent: 0x55c232941890 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args:  
MethodDecl:  Return type: void; Args:  operator->; current_parent: 0x55c232941890 child_index: 1 num_children: 2 
Return type: void; Args:  
operator->; current_parent: 0x55c232941890 child_index: 1 num_children: 2 
Return type: void; Args: 
ScopeLayerTree::SetFunctionScope Return type: void; Args:  Return type: void; Args:  
GoUp
Current state: parent: 0x55c232941770 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232940920 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x55c232941770 ; child index: 1 num_children: 2 
>>> PrintVisitor: ClassDecl House 
>>> PrintVisitor: VarDecl type: Dog, is_array: true dogs 
dogs type: Dog, is_array: true 
operator->; current_parent: 0x55c232941770 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c232941770 child_index: 1 num_children: 2 
VarDecl: IsMethodDecl
>>> PrintVisitor: VarDecl type: int, is_array: false num_dogs 
num_dogs type: int, is_array: false 
operator->; current_parent: 0x55c232941770 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c232941770 child_index: 1 num_children: 2 
VarDecl: IsMethodDecl
SymbolTreeVisitor::FunctionScopeDown
Return type: void; Args: new_num(type: int, is_array: false), 
GoDown
Current state: parent: 0x55c2329424a0 ; child index: 0 num_children: 1 
Return type: void; Args: new_num(type: int, is_array: false), 
>>> PrintVisitor: MethodDecl Return type: void; Args: new_num(type: int, is_array: false),  SetNumDogs 
SetNumDogs Return type: void; Args: new_num(type: int, is_array: false),  operator->; current_parent: 0x55c2329424a0 child_index: 0 num_children: 1 
Return type: void; Args: new_num(type: int, is_array: false),  
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c2329424a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_num(type: int, is_array: false),  
ScopeLayer::IsArgument: new_num num_dogs
>>> PrintVisitor: IdentExpr new_num 
operator->; current_parent: 0x55c2329424a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_num(type: int, is_array: false),  
ScopeLayer::IsArgument: new_num new_num
operator->; current_parent: 0x55c2329424a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_num(type: int, is_array: false),  
ScopeLayer::IsArgument: new_num new_num
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_num(type: int, is_array: false),  
ScopeLayer::IsArgument: new_num new_num
operator->; current_parent: 0x55c2329424a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_num(type: int, is_array: false),  
ScopeLayer::IsArgument: new_num num_dogs
MethodDecl:  Return type: void; Args: new_num(type: int, is_array: false),  operator->; current_parent: 0x55c2329424a0 child_index: 0 num_children: 1 
Return type: void; Args: new_num(type: int, is_array: false),  
operator->; current_parent: 0x55c2329424a0 child_index: 0 num_children: 1 
Return type: void; Args: new_num(type: int, is_array: false), 
ScopeLayerTree::SetFunctionScope Return type: void; Args: new_num(type: int, is_array: false),  Return type: void; Args: new_num(type: int, is_array: false),  
GoUp
Current state: parent: 0x55c232941770 ; child index: 1 num_children: 2 
SymbolTreeVisitor::FunctionScopeDown
Return type: int; Args: 
GoDown
Current state: parent: 0x55c2329424a0 ; child index: 1 num_children: 2 
Return type: int; Args: 
>>> PrintVisitor: MethodDecl Return type: int; Args:  GetNumDogs 
GetNumDogs Return type: int; Args:  operator->; current_parent: 0x55c2329424a0 child_index: 1 num_children: 2 
Return type: int; Args:  
>>> PrintVisitor: ReturnStmt
>>> PrintVisitor: IdentExpr num_dogs 
operator->; current_parent: 0x55c2329424a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: int; Args:  
operator->; current_parent: 0x55c2329424a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: int; Args:  
MethodDecl:  Return type: int; Args:  operator->; current_parent: 0x55c2329424a0 child_index: 1 num_children: 2 
Return type: int; Args:  
operator->; current_parent: 0x55c2329424a0 child_index: 1 num_children: 2 
Return type: int; Args: 
ScopeLayerTree::SetFunctionScope Return type: int; Args:  Return type: int; Args:  
GoUp
Current state: parent: 0x55c232941770 ; child index: 1 num_children: 2 
SymbolTreeVisitor::FunctionScopeDown
Return type: void; Args: new_dogs(type: Dog, is_array: true), 
GoDown
Current state: parent: 0x55c2329424a0 ; child index: 2 num_children: 3 
Return type: void; Args: new_dogs(type: Dog, is_array: true), 
>>> PrintVisitor: MethodDecl Return type: void; Args: new_dogs(type: Dog, is_array: true),  SetDogs 
SetDogs Return type: void; Args: new_dogs(type: Dog, is_array: true),  operator->; current_parent: 0x55c2329424a0 child_index: 2 num_children: 3 
Return type: void; Args: new_dogs(type: Dog, is_array: true),  
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c2329424a0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_dogs(type: Dog, is_array: true),  
ScopeLayer::IsArgument: new_dogs dogs
>>> PrintVisitor: IdentExpr new_dogs 
operator->; current_parent: 0x55c2329424a0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_dogs(type: Dog, is_array: true),  
ScopeLayer::IsArgument: new_dogs new_dogs
operator->; current_parent: 0x55c2329424a0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_dogs(type: Dog, is_array: true),  
ScopeLayer::IsArgument: new_dogs new_dogs
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_dogs(type: Dog, is_array: true),  
ScopeLayer::IsArgument: new_dogs new_dogs
operator->; current_parent: 0x55c2329424a0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_dogs(type: Dog, is_array: true),  
ScopeLayer::IsArgument: new_dogs dogs
MethodDecl:  Return type: void; Args: new_dogs(type: Dog, is_array: true),  operator->; current_parent: 0x55c2329424a0 child_index: 2 num_children: 3 
Return type: void; Args: new_dogs(type: Dog, is_array: true),  
operator->; current_parent: 0x55c2329424a0 child_index: 2 num_children: 3 
Return type: void; Args: new_dogs(type: Dog, is_array: true), 
ScopeLayerTree::SetFunctionScope Return type: void; Args: new_dogs(type: Dog, is_array: true),  Return type: void; Args: new_dogs(type: Dog, is_array: true),  
GoUp
Current state: parent: 0x55c232941770 ; child index: 1 num_children: 2 
SymbolTreeVisitor::FunctionScopeDown
Return type: void; Args: dog_index(type: int, is_array: false), 
GoDown
Current state: parent: 0x55c2329424a0 ; child index: 3 num_children: 4 
Return type: void; Args: dog_index(type: int, is_array: false), 
>>> PrintVisitor: MethodDecl Return type: void; Args: dog_index(type: int, is_array: false),  AddDog 
AddDog Return type: void; Args: dog_index(type: int, is_array: false),  operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
Return type: void; Args: dog_index(type: int, is_array: false),  
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 0 num_children: 1 
>>> PrintVisitor: IfStmt
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: MethodExpr
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: ThisExpr
operator->; current_parent: 0x55c232951ea0 child_index: 0 num_children: 1 
GetNumDogs
GoDown
Current state: parent: 0x55c2329520a0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232951ea0 ; child index: 0 num_children: 1 
>>> PrintVisitor: LengthExpr
>>> PrintVisitor: IdentExpr dogs 
operator->; current_parent: 0x55c232951ea0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
operator->; current_parent: 0x55c232951ea0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
GoDown
Current state: parent: 0x55c2329520a0 ; child index: 1 num_children: 2 
>>> PrintVisitor: StmtListStmt
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: Dog, is_array: true new_dogs 
new_dogs type: Dog, is_array: true 
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
>>> PrintVisitor: NewArrayExpr type =  Dog 
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: IdentExpr num_dogs 
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
>>> PrintVisitor: IntExpr 2 
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: int, is_array: false i 
i type: int, is_array: false 
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
>>> PrintVisitor: IntExpr 0 
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
GoDown
Current state: parent: 0x55c2329523c0 ; child index: 0 num_children: 1 
>>> PrintVisitor: WhileStmt
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: IdentExpr i 
operator->; current_parent: 0x55c2329523c0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c2329523c0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> PrintVisitor: IdentExpr num_dogs 
operator->; current_parent: 0x55c2329523c0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c2329523c0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
GoDown
Current state: parent: 0x55c2329526f0 ; child index: 0 num_children: 1 
>>> PrintVisitor: StmtListStmt
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> PrintVisitor: IdentExpr i 
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> PrintVisitor: SubscriptExpr
>>> PrintVisitor: IdentExpr dogs 
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
>>> PrintVisitor: IdentExpr i 
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: IdentExpr i 
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> PrintVisitor: IntExpr 1 
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
GoUp
Current state: parent: 0x55c2329523c0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c2329520a0 ; child index: 1 num_children: 2 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
>>> PrintVisitor: IdentExpr new_dogs 
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
GoUp
Current state: parent: 0x55c232951ea0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c2329424a0 ; child index: 3 num_children: 4 
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: Dog, is_array: false new_dog 
new_dog type: Dog, is_array: false 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dog
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
>>> PrintVisitor: NewExpr type =  Dog 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
>>> PrintVisitor: MethodStmt
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr new_dog 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
SetIndex
>>> PrintVisitor: IdentExpr dog_index 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dog_index
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dog_index
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dog_index
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x55c2329424a0 ; child index: 3 num_children: 4 
>>> PrintVisitor: MethodStmt
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr new_dog 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
Bark
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 2 num_children: 3 
GoUp
Current state: parent: 0x55c2329424a0 ; child index: 3 num_children: 4 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
>>> PrintVisitor: IdentExpr num_dogs 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
>>> PrintVisitor: IdentExpr new_dog 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: IdentExpr num_dogs 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
>>> PrintVisitor: IntExpr 1 
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
MethodDecl:  Return type: void; Args: dog_index(type: int, is_array: false),  operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
Return type: void; Args: dog_index(type: int, is_array: false),  
operator->; current_parent: 0x55c2329424a0 child_index: 3 num_children: 4 
Return type: void; Args: dog_index(type: int, is_array: false), 
ScopeLayerTree::SetFunctionScope Return type: void; Args: dog_index(type: int, is_array: false),  Return type: void; Args: dog_index(type: int, is_array: false),  
GoUp
Current state: parent: 0x55c232941770 ; child index: 1 num_children: 2 
SymbolTreeVisitor::FunctionScopeDown
Return type: Dog; Args: i(type: int, is_array: false), 
GoDown
Current state: parent: 0x55c2329424a0 ; child index: 4 num_children: 5 
Return type: Dog; Args: i(type: int, is_array: false), 
>>> PrintVisitor: MethodDecl Return type: Dog; Args: i(type: int, is_array: false),  GetDog 
GetDog Return type: Dog; Args: i(type: int, is_array: false),  operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
Return type: Dog; Args: i(type: int, is_array: false),  
>>> PrintVisitor: AssertStmt
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: IdentExpr i 
operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
>>> PrintVisitor: IntExpr -1 
>>> PrintVisitor: AssertStmt
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: IdentExpr i 
operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
>>> PrintVisitor: IdentExpr num_dogs 
operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i num_dogs
operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i num_dogs
>>> PrintVisitor: ReturnStmt
>>> PrintVisitor: SubscriptExpr
>>> PrintVisitor: IdentExpr dogs 
operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i dogs
operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i dogs
>>> PrintVisitor: IdentExpr i 
operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
MethodDecl:  Return type: Dog; Args: i(type: int, is_array: false),  operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
Return type: Dog; Args: i(type: int, is_array: false),  
operator->; current_parent: 0x55c2329424a0 child_index: 4 num_children: 5 
Return type: Dog; Args: i(type: int, is_array: false), 
ScopeLayerTree::SetFunctionScope Return type: Dog; Args: i(type: int, is_array: false),  Return type: Dog; Args: i(type: int, is_array: false),  
GoUp
Current state: parent: 0x55c232941770 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x55c232940920 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
>>> PrintVisitor: MainClass
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: House, is_array: false house 
house type: House, is_array: false 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
>>> PrintVisitor: NewExpr type =  House 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
>>> PrintVisitor: MethodStmt
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr house 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
SetNumDogs
>>> PrintVisitor: IntExpr 0 
GoDown
Current state: parent: 0x55c232953450 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
>>> PrintVisitor: MethodStmt
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr house 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
SetDogs
>>> PrintVisitor: NewArrayExpr type =  Dog 
>>> PrintVisitor: IntExpr 1 
GoDown
Current state: parent: 0x55c232953450 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 2 num_children: 3 
>>> PrintVisitor: IfStmt
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: IntExpr 3 
>>> PrintVisitor: IntExpr 2 
GoDown
Current state: parent: 0x55c2329538e0 ; child index: 0 num_children: 1 
>>> PrintVisitor: StmtListStmt
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: int, is_array: false i 
i type: int, is_array: false 
operator->; current_parent: 0x55c2329538e0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x55c2329538e0 child_index: 0 num_children: 1 
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: int, is_array: true j 
j type: int, is_array: true 
operator->; current_parent: 0x55c2329538e0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x55c2329538e0 child_index: 0 num_children: 1 
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: House, is_array: false h 
h type: House, is_array: false 
operator->; current_parent: 0x55c2329538e0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x55c2329538e0 child_index: 0 num_children: 1 
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: House, is_array: true g 
g type: House, is_array: true 
operator->; current_parent: 0x55c2329538e0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
operator->; current_parent: 0x55c2329538e0 child_index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 2 num_children: 3 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
>>> PrintVisitor: MethodStmt
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr house 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
AddDog
>>> PrintVisitor: IntExpr 42 
GoDown
Current state: parent: 0x55c232953450 ; child index: 3 num_children: 4 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
>>> PrintVisitor: PrintStmt
>>> PrintVisitor: MethodExpr
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr house 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
GetNumDogs
GoDown
Current state: parent: 0x55c232953450 ; child index: 4 num_children: 5 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
>>> PrintVisitor: MethodStmt
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr house 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
AddDog
>>> PrintVisitor: IntExpr 79 
GoDown
Current state: parent: 0x55c232953450 ; child index: 5 num_children: 6 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
>>> PrintVisitor: PrintStmt
>>> PrintVisitor: MethodExpr
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr house 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
GetNumDogs
GoDown
Current state: parent: 0x55c232953450 ; child index: 6 num_children: 7 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
>>> PrintVisitor: MethodStmt
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: MethodExpr
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr house 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
GetDog
>>> PrintVisitor: IntExpr 0 
GoDown
Current state: parent: 0x55c232953450 ; child index: 7 num_children: 8 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
Bark
GoDown
Current state: parent: 0x55c232953450 ; child index: 8 num_children: 9 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
>>> PrintVisitor: MethodStmt
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: MethodExpr
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr house 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
GetDog
>>> PrintVisitor: IntExpr 1 
GoDown
Current state: parent: 0x55c232953450 ; child index: 9 num_children: 10 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
Bark
GoDown
Current state: parent: 0x55c232953450 ; child index: 10 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoUp
Current state: parent: 0x55c232940920 ; child index: 1 num_children: 2 


GoDown
Current state: parent: 0x55c232940920 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x55c232940920 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x55c232940920 ; child index: 1 num_children: 2 
operator->; current_parent: 0x55c232940920 child_index: 1 num_children: 2 
>>> Interpreter: ClassDecl
GoDown
Current state: parent: 0x55c232941770 ; child index: 0 num_children: 3 
GoUp
Current state: parent: 0x55c232940920 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x55c232941770 ; child index: 0 num_children: 3 
>>> Interpreter: ClassDecl
GoDown
Current state: parent: 0x55c232941770 ; child index: 1 num_children: 3 
GoUp
Current state: parent: 0x55c232940920 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x55c232941770 ; child index: 1 num_children: 3 
GoDown
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoUp
Current state: parent: 0x55c232940920 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
>>> Interpreter: MainClass
>>> Interpreter: LocalVarDeclStmt
>>> Interpreter: VarDecl
>>> Interpreter: AssignmentStmt
Is var house declared: operator->; current_parent: 0x55c232941770 child_index: 2 num_children: 3 
1 
>>> Interpreter: NewExpr
Constructor::GetInstance
Constructor::Construct
Constructor::GetInstance
ClassBuilder::CreateObject: num_dogs
ClassBuilder::CreateObject: dogs
Constructor::Construct
Constructor::Construct
Constructor::GetInstance
ClassBuilder::CreateObject: dog_index
Constructor::Construct
>>> Interpreter: Assignment no subscript
>>> Interpreter: MethodStmt
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
>>> Interpreter: IntExpr
GoDown
Current state: parent: 0x55c232953450 ; child index: 0 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 0 num_children: 11 
Method invocation: link function
operator->; current_parent: 0x55c232953450 child_index: 0 num_children: 11 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c232953680 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 0 num_children: 11 
GoDown
Current state: parent: 0x55c232953680 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c232953680 child_index: 0 num_children: 1 
>>> Interpreter: AssignmentStmt
Is var num_dogs declared: operator->; current_parent: 0x55c232953680 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_num(type: int, is_array: false),  
ScopeLayer::IsArgument: new_num num_dogs
1 
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232953680 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_num(type: int, is_array: false),  
ScopeLayer::IsArgument: new_num new_num
operator->; current_parent: 0x55c232953680 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_num(type: int, is_array: false),  
ScopeLayer::IsArgument: new_num new_num
operator->; current_parent: 0x55c232953680 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_num(type: int, is_array: false),  
ScopeLayer::IsArgument: new_num num_dogs
operator->; current_parent: 0x55c232953680 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Class type: Dog, is_array: false; fields: {
-> dog_index 0}
-> num_dogs 0}

>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c232953680 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_num(type: int, is_array: false),  
ScopeLayer::IsArgument: new_num num_dogs
operator->; current_parent: 0x55c232953680 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Class type: Dog, is_array: false; fields: {
-> dog_index 0}
-> num_dogs 0}

>>> Interpreter: MethodStmt
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
>>> Interpreter: NewArrayExpr
>>> Interpreter: IntExpr
Constructor::GetInstance
Constructor::Construct
Constructor::GetInstance
ClassBuilder::CreateObject: dog_index
Constructor::Construct
GoDown
Current state: parent: 0x55c232953450 ; child index: 1 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 1 num_children: 11 
Method invocation: link function
operator->; current_parent: 0x55c232953450 child_index: 1 num_children: 11 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c2329537c0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 1 num_children: 11 
GoDown
Current state: parent: 0x55c2329537c0 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c2329537c0 child_index: 0 num_children: 1 
>>> Interpreter: AssignmentStmt
Is var dogs declared: operator->; current_parent: 0x55c2329537c0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_dogs(type: Dog, is_array: true),  
ScopeLayer::IsArgument: new_dogs dogs
1 
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329537c0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_dogs(type: Dog, is_array: true),  
ScopeLayer::IsArgument: new_dogs new_dogs
operator->; current_parent: 0x55c2329537c0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_dogs(type: Dog, is_array: true),  
ScopeLayer::IsArgument: new_dogs new_dogs
operator->; current_parent: 0x55c2329537c0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_dogs(type: Dog, is_array: true),  
ScopeLayer::IsArgument: new_dogs dogs
operator->; current_parent: 0x55c2329537c0 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Class type: Dog, is_array: false; fields: {
-> dog_index 0}
-> num_dogs 0}

>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c2329537c0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: new_dogs(type: Dog, is_array: true),  
ScopeLayer::IsArgument: new_dogs dogs
operator->; current_parent: 0x55c2329537c0 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Class type: Dog, is_array: false; fields: {
-> dog_index 0}
-> num_dogs 0}

>>> Interpreter: IfStmt
GoDown
Current state: parent: 0x55c232953450 ; child index: 2 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 2 num_children: 11 
>>> Interpreter: BinOpExpr
>>> Interpreter: IntExpr
>>> Interpreter: IntExpr
>>> Interpreter: StmtListStmt
GoDown
Current state: parent: 0x55c2329538e0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 2 num_children: 11 
GoDown
Current state: parent: 0x55c2329538e0 ; child index: 0 num_children: 1 
>>> Interpreter: LocalVarDeclStmt
>>> Interpreter: VarDecl
>>> Interpreter: LocalVarDeclStmt
>>> Interpreter: VarDecl
>>> Interpreter: LocalVarDeclStmt
>>> Interpreter: VarDecl
>>> Interpreter: LocalVarDeclStmt
>>> Interpreter: VarDecl
>>> Interpreter: MethodStmt
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
>>> Interpreter: IntExpr
GoDown
Current state: parent: 0x55c232953450 ; child index: 3 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 3 num_children: 11 
Method invocation: link function
operator->; current_parent: 0x55c232953450 child_index: 3 num_children: 11 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c232953e90 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 3 num_children: 11 
GoDown
Current state: parent: 0x55c232953e90 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
>>> Interpreter: IfStmt
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 0 num_children: 3 
GoUp
Current state: parent: 0x55c232953e90 ; child index: 0 num_children: 1 
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 0 num_children: 3 
>>> Interpreter: BinOpExpr
>>> Interpreter: MethodExpr
>>> Interpreter: MethodInvocation
>>> Interpreter: ThisExpr
GoDown
Current state: parent: 0x55c2329520a0 ; child index: 0 num_children: 2 
GoUp
Current state: parent: 0x55c232951ea0 ; child index: 0 num_children: 3 
GoDown
Current state: parent: 0x55c2329520a0 ; child index: 0 num_children: 2 
Method invocation: link function
operator->; current_parent: 0x55c2329520a0 child_index: 0 num_children: 2 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c2329521c0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c2329520a0 ; child index: 0 num_children: 2 
GoDown
Current state: parent: 0x55c2329521c0 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c2329521c0 child_index: 0 num_children: 1 
>>> Interpreter: ReturnStmt
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329521c0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: int; Args:  
operator->; current_parent: 0x55c2329521c0 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 0}
 ] 1 elements.
-> num_dogs 0}

>>> Interpreter: LengthExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232951ea0 child_index: 0 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
operator->; current_parent: 0x55c232951ea0 child_index: 0 num_children: 3 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 0}
 ] 1 elements.
-> num_dogs 0}

>>> Interpreter: LocalVarDeclStmt
>>> Interpreter: VarDecl
>>> Interpreter: AssignmentStmt
Is var new_dog declared: operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
1 
>>> Interpreter: NewExpr
Constructor::GetInstance
Constructor::Construct
Constructor::GetInstance
ClassBuilder::CreateObject: dog_index
Constructor::Construct
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dog
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dog
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: MethodStmt
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dog
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dog_index
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dog_index
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 1 num_children: 3 
GoUp
Current state: parent: 0x55c232953e90 ; child index: 0 num_children: 1 
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 1 num_children: 3 
Method invocation: link function
operator->; current_parent: 0x55c232951ea0 child_index: 1 num_children: 3 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c232952be0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232951ea0 ; child index: 1 num_children: 3 
GoDown
Current state: parent: 0x55c232952be0 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 1 
>>> Interpreter: AssignmentStmt
Is var dog_index declared: operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx dog_index
1 
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx idx
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx idx
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx dog_index
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 1 
Class type: Dog, is_array: false; fields: {
-> dog_index 0}

>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx dog_index
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 1 
Class type: Dog, is_array: false; fields: {
-> dog_index 0}

>>> Interpreter: MethodStmt
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dog
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 2 num_children: 3 
GoUp
Current state: parent: 0x55c232953e90 ; child index: 0 num_children: 1 
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 2 num_children: 3 
Method invocation: link function
operator->; current_parent: 0x55c232951ea0 child_index: 2 num_children: 3 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c232952d60 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232951ea0 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232952d60 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c232952d60 child_index: 0 num_children: 1 
>>> Interpreter: PrintStmt
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232952d60 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args:  
operator->; current_parent: 0x55c232952d60 child_index: 0 num_children: 1 
Class type: Dog, is_array: false; fields: {
-> dog_index 42}

42
>>> Interpreter: AssignmentStmt
Is var dogs declared: operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
1 
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dog
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 0}
 ] 1 elements.
-> num_dogs 0}

>>> Interpreter: Assignment subscript
1
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 0}
 ] 1 elements.
-> num_dogs 0}

>>> Interpreter: AssignmentStmt
Is var num_dogs declared: operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
1 
>>> Interpreter: BinOpExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 0}

>>> Interpreter: IntExpr
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 0}

>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c232953e90 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 0}

>>> Interpreter: PrintStmt
>>> Interpreter: MethodExpr
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
GoDown
Current state: parent: 0x55c232953450 ; child index: 4 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 4 num_children: 11 
Method invocation: link function
operator->; current_parent: 0x55c232953450 child_index: 4 num_children: 11 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c232953fb0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 4 num_children: 11 
GoDown
Current state: parent: 0x55c232953fb0 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c232953fb0 child_index: 0 num_children: 1 
>>> Interpreter: ReturnStmt
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232953fb0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: int; Args:  
operator->; current_parent: 0x55c232953fb0 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 1}

1
>>> Interpreter: MethodStmt
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
>>> Interpreter: IntExpr
GoDown
Current state: parent: 0x55c232953450 ; child index: 5 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 5 num_children: 11 
Method invocation: link function
operator->; current_parent: 0x55c232953450 child_index: 5 num_children: 11 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c232954160 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 5 num_children: 11 
GoDown
Current state: parent: 0x55c232954160 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
>>> Interpreter: IfStmt
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 0 num_children: 3 
GoUp
Current state: parent: 0x55c232954160 ; child index: 0 num_children: 1 
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 0 num_children: 3 
>>> Interpreter: BinOpExpr
>>> Interpreter: MethodExpr
>>> Interpreter: MethodInvocation
>>> Interpreter: ThisExpr
GoDown
Current state: parent: 0x55c2329520a0 ; child index: 0 num_children: 2 
GoUp
Current state: parent: 0x55c232951ea0 ; child index: 0 num_children: 3 
GoDown
Current state: parent: 0x55c2329520a0 ; child index: 0 num_children: 2 
Method invocation: link function
operator->; current_parent: 0x55c2329520a0 child_index: 0 num_children: 2 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c2329521c0 ; child index: 0 num_children: 2 
GoUp
Current state: parent: 0x55c2329520a0 ; child index: 0 num_children: 2 
GoDown
Current state: parent: 0x55c2329521c0 ; child index: 0 num_children: 2 
operator->; current_parent: 0x55c2329521c0 child_index: 0 num_children: 2 
>>> Interpreter: ReturnStmt
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329521c0 child_index: 0 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: int; Args:  
operator->; current_parent: 0x55c2329521c0 child_index: 0 num_children: 2 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 1}

>>> Interpreter: LengthExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232951ea0 child_index: 0 num_children: 3 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
operator->; current_parent: 0x55c232951ea0 child_index: 0 num_children: 3 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 1}

>>> Interpreter: StmtListStmt
GoDown
Current state: parent: 0x55c2329520a0 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x55c232951ea0 ; child index: 0 num_children: 3 
GoDown
Current state: parent: 0x55c2329520a0 ; child index: 1 num_children: 2 
>>> Interpreter: LocalVarDeclStmt
>>> Interpreter: VarDecl
>>> Interpreter: AssignmentStmt
Is var new_dogs declared: operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
1 
>>> Interpreter: NewArrayExpr
>>> Interpreter: BinOpExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 1}

>>> Interpreter: IntExpr
Constructor::GetInstance
Constructor::Construct
Constructor::GetInstance
ClassBuilder::CreateObject: dog_index
Constructor::Construct
Constructor::GetInstance
Constructor::Construct
Constructor::GetInstance
ClassBuilder::CreateObject: dog_index
Constructor::Construct
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: LocalVarDeclStmt
>>> Interpreter: VarDecl
>>> Interpreter: AssignmentStmt
Is var i declared: operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
1 
>>> Interpreter: IntExpr
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: WhileStmt
>>> Interpreter: BinOpExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 1}

GoDown
Current state: parent: 0x55c2329523c0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c2329520a0 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x55c2329523c0 ; child index: 0 num_children: 1 
>>> Interpreter: StmtListStmt
GoDown
Current state: parent: 0x55c2329526f0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c2329523c0 ; child index: 0 num_children: 1 
GoDown
Current state: parent: 0x55c2329526f0 ; child index: 0 num_children: 1 
>>> Interpreter: AssignmentStmt
Is var new_dogs declared: operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
0 
>>> Interpreter: SubscriptExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 1}

>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: Assignment subscript
1
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: AssignmentStmt
Is var i declared: operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
0 
>>> Interpreter: BinOpExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: IntExpr
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
operator->; current_parent: 0x55c2329526f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: BinOpExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index i
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 1}

>>> Interpreter: AssignmentStmt
Is var dogs declared: operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
1 
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dogs
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 1}

>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
operator->; current_parent: 0x55c2329520a0 child_index: 1 num_children: 2 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 ] 1 elements.
-> num_dogs 1}

>>> Interpreter: LocalVarDeclStmt
>>> Interpreter: VarDecl
>>> Interpreter: AssignmentStmt
Is var new_dog declared: operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
1 
>>> Interpreter: NewExpr
Constructor::GetInstance
Constructor::Construct
Constructor::GetInstance
ClassBuilder::CreateObject: dog_index
Constructor::Construct
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dog
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dog
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: MethodStmt
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dog
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dog_index
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dog_index
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 1 num_children: 3 
GoUp
Current state: parent: 0x55c232954160 ; child index: 0 num_children: 1 
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 1 num_children: 3 
Method invocation: link function
operator->; current_parent: 0x55c232951ea0 child_index: 1 num_children: 3 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c232952be0 ; child index: 0 num_children: 2 
GoUp
Current state: parent: 0x55c232951ea0 ; child index: 1 num_children: 3 
GoDown
Current state: parent: 0x55c232952be0 ; child index: 0 num_children: 2 
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 2 
>>> Interpreter: AssignmentStmt
Is var dog_index declared: operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx dog_index
1 
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx idx
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx idx
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx dog_index
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 2 
Class type: Dog, is_array: false; fields: {
-> dog_index 0}

>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: idx(type: int, is_array: false),  
ScopeLayer::IsArgument: idx dog_index
operator->; current_parent: 0x55c232952be0 child_index: 0 num_children: 2 
Class type: Dog, is_array: false; fields: {
-> dog_index 0}

>>> Interpreter: MethodStmt
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dog
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 2 num_children: 3 
GoUp
Current state: parent: 0x55c232954160 ; child index: 0 num_children: 1 
GoDown
Current state: parent: 0x55c232951ea0 ; child index: 2 num_children: 3 
Method invocation: link function
operator->; current_parent: 0x55c232951ea0 child_index: 2 num_children: 3 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c232952d60 ; child index: 0 num_children: 2 
GoUp
Current state: parent: 0x55c232951ea0 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232952d60 ; child index: 0 num_children: 2 
operator->; current_parent: 0x55c232952d60 child_index: 0 num_children: 2 
>>> Interpreter: PrintStmt
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232952d60 child_index: 0 num_children: 2 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args:  
operator->; current_parent: 0x55c232952d60 child_index: 0 num_children: 2 
Class type: Dog, is_array: false; fields: {
-> dog_index 79}

79
>>> Interpreter: AssignmentStmt
Is var dogs declared: operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
1 
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index new_dog
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: ; Args:  
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index dogs
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 Class type: Dog, is_array: false; fields: {
-> dog_index 0}
 ] 2 elements.
-> num_dogs 1}

>>> Interpreter: Assignment subscript
1
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 Class type: Dog, is_array: false; fields: {
-> dog_index 0}
 ] 2 elements.
-> num_dogs 1}

>>> Interpreter: AssignmentStmt
Is var num_dogs declared: operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
1 
>>> Interpreter: BinOpExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 Class type: Dog, is_array: false; fields: {
-> dog_index 79}
 ] 2 elements.
-> num_dogs 1}

>>> Interpreter: IntExpr
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 Class type: Dog, is_array: false; fields: {
-> dog_index 79}
 ] 2 elements.
-> num_dogs 1}

>>> Interpreter: Assignment no subscript
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args: dog_index(type: int, is_array: false),  
ScopeLayer::IsArgument: dog_index num_dogs
operator->; current_parent: 0x55c232954160 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 Class type: Dog, is_array: false; fields: {
-> dog_index 79}
 ] 2 elements.
-> num_dogs 1}

>>> Interpreter: PrintStmt
>>> Interpreter: MethodExpr
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
GoDown
Current state: parent: 0x55c232953450 ; child index: 6 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 6 num_children: 11 
Method invocation: link function
operator->; current_parent: 0x55c232953450 child_index: 6 num_children: 11 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c232954280 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 6 num_children: 11 
GoDown
Current state: parent: 0x55c232954280 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c232954280 child_index: 0 num_children: 1 
>>> Interpreter: ReturnStmt
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232954280 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: int; Args:  
operator->; current_parent: 0x55c232954280 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 Class type: Dog, is_array: false; fields: {
-> dog_index 79}
 ] 2 elements.
-> num_dogs 2}

2
>>> Interpreter: MethodStmt
>>> Interpreter: MethodInvocation
>>> Interpreter: MethodExpr
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
>>> Interpreter: IntExpr
GoDown
Current state: parent: 0x55c232953450 ; child index: 7 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 7 num_children: 11 
Method invocation: link function
operator->; current_parent: 0x55c232953450 child_index: 7 num_children: 11 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c2329543a0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 7 num_children: 11 
GoDown
Current state: parent: 0x55c2329543a0 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c2329543a0 child_index: 0 num_children: 1 
>>> Interpreter: AssertStmt
>>> Interpreter: BinOpExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329543a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
operator->; current_parent: 0x55c2329543a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
>>> Interpreter: IntExpr
>>> Interpreter: AssertStmt
>>> Interpreter: BinOpExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329543a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
operator->; current_parent: 0x55c2329543a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329543a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i num_dogs
operator->; current_parent: 0x55c2329543a0 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 Class type: Dog, is_array: false; fields: {
-> dog_index 79}
 ] 2 elements.
-> num_dogs 2}

>>> Interpreter: ReturnStmt
>>> Interpreter: SubscriptExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329543a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i dogs
operator->; current_parent: 0x55c2329543a0 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 Class type: Dog, is_array: false; fields: {
-> dog_index 79}
 ] 2 elements.
-> num_dogs 2}

>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329543a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
operator->; current_parent: 0x55c2329543a0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
GoDown
Current state: parent: 0x55c232953450 ; child index: 8 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 8 num_children: 11 
Method invocation: link function
operator->; current_parent: 0x55c232953450 child_index: 8 num_children: 11 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c2329544c0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 8 num_children: 11 
GoDown
Current state: parent: 0x55c2329544c0 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c2329544c0 child_index: 0 num_children: 1 
>>> Interpreter: PrintStmt
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329544c0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args:  
operator->; current_parent: 0x55c2329544c0 child_index: 0 num_children: 1 
Class type: Dog, is_array: false; fields: {
-> dog_index 42}

42
>>> Interpreter: MethodStmt
>>> Interpreter: MethodInvocation
>>> Interpreter: MethodExpr
>>> Interpreter: MethodInvocation
>>> Interpreter: IdentExpr
>>> Interpreter: IntExpr
GoDown
Current state: parent: 0x55c232953450 ; child index: 9 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 9 num_children: 11 
Method invocation: link function
operator->; current_parent: 0x55c232953450 child_index: 9 num_children: 11 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c2329546f0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 9 num_children: 11 
GoDown
Current state: parent: 0x55c2329546f0 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c2329546f0 child_index: 0 num_children: 1 
>>> Interpreter: AssertStmt
>>> Interpreter: BinOpExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329546f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
operator->; current_parent: 0x55c2329546f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
>>> Interpreter: IntExpr
>>> Interpreter: AssertStmt
>>> Interpreter: BinOpExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329546f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
operator->; current_parent: 0x55c2329546f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329546f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i num_dogs
operator->; current_parent: 0x55c2329546f0 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 Class type: Dog, is_array: false; fields: {
-> dog_index 79}
 ] 2 elements.
-> num_dogs 2}

>>> Interpreter: ReturnStmt
>>> Interpreter: SubscriptExpr
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329546f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i dogs
operator->; current_parent: 0x55c2329546f0 child_index: 0 num_children: 1 
Class type: House, is_array: false; fields: {
-> dogs Array [ Class type: Dog, is_array: false; fields: {
-> dog_index 42}
 Class type: Dog, is_array: false; fields: {
-> dog_index 79}
 ] 2 elements.
-> num_dogs 2}

>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c2329546f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
operator->; current_parent: 0x55c2329546f0 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: Dog; Args: i(type: int, is_array: false),  
ScopeLayer::IsArgument: i i
GoDown
Current state: parent: 0x55c232953450 ; child index: 10 num_children: 11 
GoUp
Current state: parent: 0x55c232941770 ; child index: 2 num_children: 3 
GoDown
Current state: parent: 0x55c232953450 ; child index: 10 num_children: 11 
Method invocation: link function
operator->; current_parent: 0x55c232953450 child_index: 10 num_children: 11 
Method invocation: link function (end)
GoDown
Current state: parent: 0x55c232954810 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x55c232953450 ; child index: 10 num_children: 11 
GoDown
Current state: parent: 0x55c232954810 ; child index: 0 num_children: 1 
operator->; current_parent: 0x55c232954810 child_index: 0 num_children: 1 
>>> Interpreter: PrintStmt
>>> Interpreter: IdentExpr
operator->; current_parent: 0x55c232954810 child_index: 0 num_children: 1 
ScopeLayer::IsArgument
ScopeLayer::IsArgument not main Return type: void; Args:  
operator->; current_parent: 0x55c232954810 child_index: 0 num_children: 1 
Class type: Dog, is_array: false; fields: {
-> dog_index 79}

79
