>>> IrtreeBuildVisitor: Program
>>> PrintVisitor: Program
GoDown
Current state: parent: 0x56300809b940 ; child index: 1 num_children: 2 
operator->; current_parent: 0x56300809b940 child_index: 1 num_children: 2 
GoDown
Current state: parent: 0x56300809bed0 ; child index: 0 num_children: 1 
>>> PrintVisitor: ClassDecl Five 
SymbolTreeVisitor::FunctionScopeDown
Return type: int; Args: 
GoDown
Current state: parent: 0x56300809c050 ; child index: 0 num_children: 1 
Return type: int; Args: 
>>> PrintVisitor: MethodDecl Return type: int; Args:  GetNum 
GetNum Return type: int; Args:  operator->; current_parent: 0x56300809c050 child_index: 0 num_children: 1 
Return type: int; Args:  
>>> PrintVisitor: ReturnStmt
>>> PrintVisitor: IntExpr 5 
MethodDecl:  Return type: int; Args:  operator->; current_parent: 0x56300809c050 child_index: 0 num_children: 1 
Return type: int; Args:  
operator->; current_parent: 0x56300809c050 child_index: 0 num_children: 1 
Return type: int; Args: 
ScopeLayerTree::SetFunctionScope Return type: int; Args:  Return type: int; Args:  
GoUp
Current state: parent: 0x56300809bed0 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x56300809b940 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x56300809bed0 ; child index: 1 num_children: 2 
>>> PrintVisitor: ClassDecl Six 
SymbolTreeVisitor::FunctionScopeDown
Return type: int; Args: 
GoDown
Current state: parent: 0x56300809c650 ; child index: 0 num_children: 1 
Return type: int; Args: 
>>> PrintVisitor: MethodDecl Return type: int; Args:  GetNum 
GetNum Return type: int; Args:  operator->; current_parent: 0x56300809c650 child_index: 0 num_children: 1 
Return type: int; Args:  
>>> PrintVisitor: ReturnStmt
>>> PrintVisitor: IntExpr 6 
MethodDecl:  Return type: int; Args:  operator->; current_parent: 0x56300809c650 child_index: 0 num_children: 1 
Return type: int; Args:  
operator->; current_parent: 0x56300809c650 child_index: 0 num_children: 1 
Return type: int; Args: 
ScopeLayerTree::SetFunctionScope Return type: int; Args:  Return type: int; Args:  
GoUp
Current state: parent: 0x56300809bed0 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x56300809b940 ; child index: 1 num_children: 2 
GoDown
Current state: parent: 0x56300809bed0 ; child index: 2 num_children: 3 
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
>>> PrintVisitor: MainClass
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: Five, is_array: false a 
a type: Five, is_array: false 
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
>>> PrintVisitor: NewExpr type =  Five 
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
>>> PrintVisitor: LocalVarDeclStmt
>>> PrintVisitor: VarDecl type: Six, is_array: false b 
b type: Six, is_array: false 
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
ScopeLayer::IsArgument
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
>>> PrintVisitor: AssignmentStmt
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
>>> PrintVisitor: NewExpr type =  Six 
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
>>> PrintVisitor: PrintStmt
>>> PrintVisitor: BinOpExpr
>>> PrintVisitor: MethodExpr
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr a 
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
GetNum
GoDown
Current state: parent: 0x5630080a7260 ; child index: 0 num_children: 1 
GoUp
Current state: parent: 0x56300809bed0 ; child index: 2 num_children: 3 
>>> PrintVisitor: MethodExpr
>>> PrintVisitor: MethodInvocation
>>> PrintVisitor: IdentExpr b 
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
operator->; current_parent: 0x56300809bed0 child_index: 2 num_children: 3 
GetNum
GoDown
Current state: parent: 0x5630080a7260 ; child index: 1 num_children: 2 
GoUp
Current state: parent: 0x56300809bed0 ; child index: 2 num_children: 3 
GoUp
Current state: parent: 0x56300809b940 ; child index: 1 num_children: 2 
>>> IrtreeBuildVisitor: ClassDecl
>>> IrtreeBuildVisitor: MethodDecl
>>> IrtreeBuildVisitor: ReturnStmt
>>> IrtreeBuildVisitor: IntExpr
>>> IrtreeBuildVisitor: ClassDecl
>>> IrtreeBuildVisitor: MethodDecl
>>> IrtreeBuildVisitor: ReturnStmt
>>> IrtreeBuildVisitor: IntExpr
>>> IrtreeBuildVisitor: MainClass
>>> IrtreeBuildVisitor: LocalVarDeclStmt
>>> IrtreeBuildVisitor: VarDecl
>>> IrtreeBuildVisitor: AssignmentStmt
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: NewExpr
>>> IrtreeBuildVisitor: LocalVarDeclStmt
>>> IrtreeBuildVisitor: VarDecl
>>> IrtreeBuildVisitor: AssignmentStmt
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: NewExpr
>>> IrtreeBuildVisitor: PrintStmt
>>> IrtreeBuildVisitor: BinOpExpr
>>> IrtreeBuildVisitor: MethodExpr
>>> IrtreeBuildVisitor: MethodInvocation
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
>>> IrtreeBuildVisitor: MethodExpr
>>> IrtreeBuildVisitor: MethodInvocation
>>> IrtreeBuildVisitor: IdentExpr
>>> IrtreeBuildVisitor: Lvalue
EseqElimination::SeqStatement
EseqElimination::MoveStatement
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 9 
EseqElimination::IsEseq element type: 7 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 8 
EseqElimination::MemExpression (finish)
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::ConstExpression
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 7 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::IsEseq element type: 11 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 9 
EseqElimination::EseqExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 13 
move: !is_target_eseq && is_source_eseq
move: target is MemExpr
EseqElimination::MoveStatement (finish)
EseqElimination::SeqStatement
EseqElimination::MoveStatement
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 9 
EseqElimination::IsEseq element type: 7 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 8 
EseqElimination::MemExpression (finish)
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::ConstExpression
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 7 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::IsEseq element type: 11 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 9 
EseqElimination::EseqExpression (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::IsEseq element type: 13 
move: !is_target_eseq && is_source_eseq
move: target is MemExpr
EseqElimination::MoveStatement (finish)
EseqElimination::ExpStatement
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::BinopExpression
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 9 
EseqElimination::IsEseq element type: 7 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 8 
EseqElimination::MemExpression (finish)
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::IsEseq element type: 11 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 9 
EseqElimination::EseqExpression (finish)
EseqElimination::EseqExpression
EseqElimination::MoveStatement
EseqElimination::TempExpression
EseqElimination::CallExpression
EseqElimination::NameExpression
EseqElimination::ExpressionList
EseqElimination::MemExpression
EseqElimination::BinopExpression
EseqElimination::TempExpression
EseqElimination::ConstExpression
EseqElimination::IsEseq element type: 9 
EseqElimination::IsEseq element type: 7 
binop: !is_lhs_eseq && !is_rhs_eseq
EseqElimination::BinopExpression (finish)
EseqElimination::IsEseq element type: 8 
EseqElimination::MemExpression (finish)
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 10 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::IsEseq element type: 11 
move: !is_target_eseq && !is_source_eseq
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 9 
EseqElimination::EseqExpression (finish)
EseqElimination::IsEseq element type: 13 
EseqElimination::IsEseq element type: 13 
binop: is_lhs_eseq && is_rhs_eseq
EseqElimination::Rehang
EseqElimination::IsEseq element type: 13 
EseqElimination::BinopExpression (finish)
EseqElimination::ExpressionList (finish)
EseqElimination::IsEseq element type: 13 
EseqElimination::CallExpression (finish)
EseqElimination::IsEseq element type: 9 
EseqElimination::IsEseq element type: 13 
move: !is_target_eseq && is_source_eseq
move: target is temp
EseqElimination::MoveStatement (finish)
EseqElimination::TempExpression
EseqElimination::IsEseq element type: 9 
EseqElimination::EseqExpression (finish)
exp stmt: pre `is eseq`
EseqElimination::IsEseq element type: 13 
EseqElimination::ExpStatement (finish)
EseqElimination::SeqStatement (finish)
EseqElimination::SeqStatement (finish)
BlockTree::BlockTree
